<?jelly escape-by-default='true' ?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
  xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
  xmlns:i="jelly:fmt" xmlns:p="/lib/hudson/project">
  ${it.parameters.clear()}
  <st:include page="/org/biouno/unochoice/common/choiceParameterCommon.jelly"/>
  <script type="text/javascript">
    // source, references table
    var referencedParameters = Array();
    <j:forEach var="value" items="${it.getReferencedParametersAsArray()}">
        // add the element we want to monitor
        referencedParameters.push("${value}");
    </j:forEach>

    if (window.makeStaplerProxy) {
        window.__old__makeStaplerProxy = window.makeStaplerProxy;
        window.makeStaplerProxy = UnoChoice.makeStaplerProxy2;
    }
    var cascadeChoiceParameter = <st:bind value="${it}"/>; // Create Jenkins proxy
    if (window.makeStaplerProxy) {
        window.makeStaplerProxy = window.__old__makeStaplerProxy;
    }
    // find the cascade parameter element
    var parentDiv = jQuery('#${paramName}');
    var parameterHtmlElement = parentDiv.find('DIV');
    if (!parameterHtmlElement || parameterHtmlElement.length == 0) {
        console.log('Could not find element by name, perhaps it is a DIV?');
        parameterHtmlElement = parentDiv.find('*[name="value"]');
    }
    if (parameterHtmlElement &amp;&amp; parameterHtmlElement.get(0)) {
        var cascadeParameter = new UnoChoice.CascadeParameter('${it.getName()}', parameterHtmlElement.get(0), '${it.getRandomName()}', cascadeChoiceParameter);
        UnoChoice.cascadeParameters.push(cascadeParameter);
        // filter
        <j:if test="${it.filterable}">
        var filterHtmlElement = parentDiv.find('.uno_choice_filter');
        if (filterHtmlElement &amp;&amp; filterHtmlElement.get(0)) {
            var filterElement = new UnoChoice.FilterElement(parameterHtmlElement.get(0), filterHtmlElement.get(0), ${it.getFilterLength()});
            cascadeParameter.setFilterElement(filterElement);
        } else {
            console.log('Filter error: Missing filter element!');
        }
        </j:if>

        for (var i  = 0; i &lt; referencedParameters.length ; ++i) {
            var parameterElement = null;
            // FIXME: review the block below
            var divs = jQuery('div[name="parameter"]');
            for (var j = 0; j &lt; divs.length ; j++) {
                var div = divs[j];
                var hiddenNames = jQuery(div).find('input[name="name"]');
                if (hiddenNames[0].value == referencedParameters[i]) {
                    var children = div.children;
                    for (var k = 0; k &lt; children.length; ++k) {
                        var child = children[k];
                        if (child.getAttribute('name') == 'value') {
                            parameterElement = child;
                            break;
                        } else if (child.tagName == 'DIV') {
                            var subValues = jQuery(child).find('input[name="value"]');
                            if (subValues &amp;&amp; subValues.get(0)) {
                                parameterElement = child;
                                break;
                            } else {
                                parameterElement = child;
                                break;
                            }
                        } else if (child.getAttribute('type') == 'file') {
                            parameterElement = child;
                            break;
                        } else if (child.tagName === 'INPUT' &amp;&amp; !['', 'name'].includes(child.name)) {
                            parameterElement = child;
                            break;
                        }
                    }
                }
            }

            new UnoChoice.ReferencedParameter(referencedParameters[i], parameterElement, cascadeParameter);
        }

        // call update methods in Java passing the HTML values
        console.log('Updating cascade of parameter [${it.getName()}] ...');
        cascadeParameter.update();
    } else {
        console.log('Parameter error: Missing parameter [${paramName}] HTML element!');
    }

  </script>
</j:jelly>
