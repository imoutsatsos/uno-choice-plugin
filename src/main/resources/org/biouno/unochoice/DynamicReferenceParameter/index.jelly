<?jelly escape-by-default='true' ?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
  xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form"
  xmlns:i="jelly:fmt" xmlns:p="/lib/hudson/project">
  ${it.parameters.clear()}
  <st:adjunct includes="org.kohsuke.stapler.jquery"/>
  <st:adjunct includes="org.biouno.unochoice.stapler.unochoice"/>
  <j:set var="choiceType" value="${it.choiceType}"/>
  <j:set var="omitValueField" value="${it.omitValueField}"/>
  <j:set var="cssclazz" value="" />
  <j:set var="escapeEntryTitleAndDescription" value="false"/>
  <j:invokeStatic var="paramName" className="org.biouno.unochoice.util.Utils" method="createRandomParameterName">
    <j:arg type="java.lang.String" value="choice-parameter" />
    <j:arg type="java.lang.String" value="" />
  </j:invokeStatic>
  <j:set var="paramName" value="${paramName}" />
  <j:if test="${choiceType eq 'ET_FORMATTED_HIDDEN_HTML'}">
    <j:set var="cssclazz" value="hidden_uno_choice_parameter" />    
  </j:if>
  <f:entry title="${h.escape(it.name)}" description="${it.formattedDescription}">
    <div name="parameter" class="${cssclazz}" id='${paramName}'>
      <input type="hidden" name="name" value="${h.escape(it.name)}" />
      <j:choose>
        <j:when test="${choiceType eq 'ET_TEXT_BOX'}">
          <st:include page="inputElement.jelly"/>
          <j:if test="${!omitValueField}">
            <input type="text" name="value" value="" style="visibility: hidden; position: absolute;" />
          </j:if>
        </j:when>
        <j:when test="${choiceType eq 'ET_ORDERED_LIST'}">
          <st:include page="orderedList.jelly"/>
          <j:if test="${!omitValueField}">
            <input type="text" name="value" value="" style="visibility: hidden; position: absolute;" />
          </j:if>
        </j:when>
        <j:when test="${choiceType eq 'ET_UNORDERED_LIST'}">
          <st:include page="unorderedList.jelly"/>
          <j:if test="${!omitValueField}">
            <input type="text" name="value" value="" style="visibility: hidden; position: absolute;" />
          </j:if>
        </j:when>
        <j:when test="${choiceType eq 'ET_FORMATTED_HTML'}">
          <st:include page="formattedHtml.jelly"/>
          <j:if test="${!omitValueField}">
            <input type="text" name="value" value="" style="visibility: hidden; position: absolute;" />
          </j:if>
        </j:when>
        <j:when test="${choiceType eq 'ET_FORMATTED_HIDDEN_HTML'}">
          <st:include page="formattedHtml.jelly"/>
          <j:if test="${!omitValueField}">
            <input type="text" name="value" value="" style="visibility: hidden; position: absolute;" />
          </j:if>
        </j:when>
      </j:choose>
    </div>
  </f:entry>
  <script type="text/javascript">
    // source, references table
    var referencedParameters = Array();
    <j:forEach var="value" items="${it.getReferencedParametersAsArray()}">
        // add the element we want to monitor
        referencedParameters.push("${value}");
    </j:forEach>

    if (window.makeStaplerProxy) {
        window.__old__makeStaplerProxy = window.makeStaplerProxy;
        window.makeStaplerProxy = UnoChoice.makeStaplerProxy2;
    }
    var dynamicReferenceParameter = <st:bind value="${it}"/>; // Create Jenkins proxy
    if (window.makeStaplerProxy) {
        window.makeStaplerProxy = window.__old__makeStaplerProxy;
    }
    // find the cascade parameter element
    var parentDiv = jQuery('#${paramName}');
    // if the parameter class has been set to hidden, then we hide it now
    if (parentDiv.get(0).getAttribute('class') == 'hidden_uno_choice_parameter') {
      var parentTbody = jQuery(parentDiv.get(0)).parents('tbody');
      if (parentTbody &amp;&amp; parentTbody.length > 0) {
        jQuery(parentTbody.get(0)).attr('style', 'visibility:hidden;position:absolute;');
      }
    }
    var parameterHtmlElement = null;
    for(var i = 0; i &lt; parentDiv.children().length; i++) {
        var child = parentDiv.children()[i];
        if (child.getAttribute('name') == 'value' || child.id.indexOf('ecp_') &gt; -1) {
            parameterHtmlElement = jQuery(child);
            break;
        }
        if (child.id.indexOf('inputElement_') &gt; -1) {
            parameterHtmlElement = jQuery(child);
            break;
        }
        if (child.id.indexOf('formattedHtml_') &gt; -1) {
            parameterHtmlElement = jQuery(child);
            break;
        }
        if (child.id.indexOf('imageGallery_') &gt; -1) {
            parameterHtmlElement = jQuery(child);
            break;
        }
    }
    if (parameterHtmlElement &amp;&amp; parameterHtmlElement.get(0)) {
        var dynamicParameter = new UnoChoice.DynamicReferenceParameter('${it.getName()}', parameterHtmlElement.get(0), dynamicReferenceParameter);
        UnoChoice.cascadeParameters.push(dynamicParameter); // TODO review whether it is right or not to add a dynamic parameter here
        for (var i  = 0; i &lt; referencedParameters.length ; ++i) {
            var parameterElement = null;
            // FIXME: review the block below
            var divs = jQuery('div[name="parameter"]');
            for (var j = 0; j &lt; divs.length ; j++) {
                var div = divs[j];
                var hiddenNames = jQuery(div).find('input[name="name"]');
                if (hiddenNames[0].value == referencedParameters[i]) {
                    var children = div.children;
                    for (var k = 0; k &lt; children.length; ++k) {
                        var child = children[k];
                        if (child.getAttribute('name') == 'value') {
                            parameterElement = child;
                            break;
                        } else if (child.tagName == 'DIV') {
                            var subValues = jQuery(child).find('input[name="value"]');
                            if (subValues &amp;&amp; subValues.get(0)) {
                                parameterElement = child;
                                break;
                            } else {
                                parameterElement = child;
                                break;
                            }
                        } else if (child.getAttribute('type') == 'file') {
                            parameterElement = child;
                            break;
                        } else if (child.tagName === 'INPUT' &amp;&amp; !['', 'name'].includes(child.name)) {
                            parameterElement = child;
                            break;
                        }
                    }
                }
            }

            new UnoChoice.ReferencedParameter(referencedParameters[i], parameterElement, dynamicParameter);
        }

        // call update methods in Java passing the HTML values
        console.log('Updating cascade of parameter [${it.getName()}] ...');
        dynamicParameter.update();
    } else {
        console.log('Parameter error: Missing parameter [${paramName}] HTML element!');
    }
  </script>
</j:jelly>
